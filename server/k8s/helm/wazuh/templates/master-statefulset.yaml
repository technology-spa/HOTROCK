apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{ template "wazuh.fullname" . }}-master"
  labels:
    app.kubernetes.io/name: {{ include "wazuh.name" . }}
    helm.sh/chart: {{ include "wazuh.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: "{{ template "wazuh.fullname" . }}-cluster"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "wazuh.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      name: "{{ template "wazuh.fullname" . }}"
      labels:
        app.kubernetes.io/name: {{ include "wazuh.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
{{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
{{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ tpl .Values.affinity . | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: wazuh-api
              containerPort: 55000
            - name: ossec-authd
              containerPort: 1515
            - name: wazuh-cluster
              containerPort: 1516
          readinessProbe:
            tcpSocket:
              port: wazuh-cluster
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: wazuh-cluster
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: auth
              mountPath: "/var/ossec/api/configuration-template/auth"
              readOnly: true
            - name: filebeat
              mountPath: "/etc/filebeat/filebeat.yml"
              subPath: "filebeat.yml"
              readOnly: true
            - name: agentreg
              mountPath: "/wazuh-config-mount/etc/authd.pass"
              subPath: "authd.pass"
              readOnly: true
            - name: ossec
              mountPath: "/wazuh-config-mount/etc/ossec.conf"
              subPath: "ossec.conf"
              readOnly: true
            - name: {{ .Values.persistence.name | quote }}
              mountPath: "/var/ossec/data"
            - name: agenttlscert
              mountPath: "/wazuh-config-mount/etc/sslmanager.cert"
              subPath: "sslmanager.cert"
              readOnly: true
            - name: agenttlskey
              mountPath: "/wazuh-config-mount/etc/sslmanager.key"
              subPath: "sslmanager.key"
              readOnly: true
            - name: apitlscert
              mountPath: "/var/ossec/data/api/configuration/ssl/server.crt"
              subPath: "server.crt"
              readOnly: true
            - name: apitlskey
              mountPath: "/var/ossec/data/api/configuration/ssl/server.key"
              subPath: "server.key"
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: auth
          secret:
            secretName: {{ template "wazuh.fullname" . }}-secrets
            items:
              - key: auth
                path: user
        - name: filebeat
          secret:
            secretName: {{ template "wazuh.fullname" . }}-secrets
            items:
              - key: filebeat.yml
                path: filebeat.yml
        - name: agentreg
          secret:
            secretName: {{ template "wazuh.fullname" . }}-secrets
            items:
              - key: agentreg
                path: authd.pass
        - name: ossec
          secret:
            secretName: {{ template "wazuh.fullname" . }}-secrets
            items:
              - key: master_ossec.conf
                path: ossec.conf
        - name: agenttlscert
          secret:
            secretName: {{ template "wazuh.fullname" . }}-secrets
            items:
              - key: sslmanager.cert
                path: sslmanager.cert
        - name: agenttlskey
          secret:
            secretName: {{ template "wazuh.fullname" . }}-secrets
            items:
              - key: sslmanager.key
                path: sslmanager.key
        - name: apitlscert
          secret:
            secretName: {{ template "wazuh.fullname" . }}-secrets
            items:
              - key: sslmanager.cert
                path: server.crt
        - name: apitlskey
          secret:
            secretName: {{ template "wazuh.fullname" . }}-secrets
            items:
              - key: sslmanager.key
                path: server.key
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.persistence.name | quote }}
        labels:
          app.kubernetes.io/name: {{ include "wazuh.name" . }}
          app.kubernetes.io/instance: {{ .Release.Name }}
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
