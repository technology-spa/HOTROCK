apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "wazuh.fullname" . }}
  labels:
    app: {{ template "wazuh.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  # filebeat.yml: {{ .Files.Get "files/filebeat.yml" | b64enc }}
  # master_ossec.conf: {{ .Files.Get "files/master-ossec.conf" | b64enc }}
  # worker_ossec.conf: {{ .Files.Get "files/worker-ossec.conf" | b64enc }}
  master_ossec.conf: |
    <ossec_config>
        <cluster>
            <name>wazuh</name>
            <node_name>wazuh-master-0</node_name>
            <key>a7fee6638ada1be2033e65561eaf31f0</key>
            <node_type>master</node_type>
            <port>1516</port>
            <bind_addr>0.0.0.0</bind_addr>
            <nodes>
                <node>wazuh-master-0.wazuh-int.client.svc.cluster.local</node>
            </nodes>
            <hidden>no</hidden>
            <disabled>no</disabled>
        </cluster>
        <global>
            <jsonout_output>no</jsonout_output>
            <alerts_log>yes</alerts_log>
            <logall>yes</logall>
            <logall_json>no</logall_json>
            <email_notification>no</email_notification>
            <smtp_server>smtp.example.wazuh.com</smtp_server>
            <email_from>ossecm@example.wazuh.com</email_from>
            <email_to>recipient@example.wazuh.com</email_to>
            <email_maxperhour>12</email_maxperhour>
            <email_log_source>alerts.log</email_log_source>
        </global>
        <!-- Choose between plain or json format (or both) for internal logs -->
        <logging>
            <log_format>json</log_format>
        </logging>
        <alerts>
            <log_alert_level>3</log_alert_level>
            <email_alert_level>12</email_alert_level>
        </alerts>
        <remote>
            <connection>secure</connection>
            <port>1514</port>
            <protocol>tcp</protocol>
        </remote>
        <!-- Policy monitoring -->
        <rootcheck>
            <disabled>yes</disabled>
            <!-- Frequency that rootcheck is executed - every 12 hours -->
            <frequency>43200</frequency>
            <rootkit_files>/var/ossec/etc/shared/rootkit_files.txt</rootkit_files>
            <rootkit_trojans>/var/ossec/etc/shared/rootkit_trojans.txt</rootkit_trojans>
            <system_audit>/var/ossec/etc/shared/system_audit_rcl.txt</system_audit>
            <system_audit>/var/ossec/etc/shared/system_audit_ssh.txt</system_audit>
            <system_audit>/var/ossec/etc/shared/cis_debian_linux_rcl.txt</system_audit>
            <skip_nfs>yes</skip_nfs>
        </rootcheck>
        <wodle name="open-scap">
            <disabled>yes</disabled>
            <timeout>1800</timeout>
            <interval>1d</interval>
            <scan-on-start>yes</scan-on-start>
            <content type="xccdf" path="ssg-debian-8-ds.xml">
                <profile>xccdf_org.ssgproject.content_profile_common</profile>
            </content>
            <content type="oval" path="cve-debian-oval.xml"/>
        </wodle>
        <wodle name="syscollector">
            <disabled>no</disabled>
            <interval>1h</interval>
            <scan_on_start>yes</scan_on_start>
            <hardware>yes</hardware>
            <os>yes</os>
            <network>yes</network>
        </wodle>
        <wodle name="vulnerability-detector">
            <disabled>no</disabled>
            <interval>5m</interval>
            <run_on_start>yes</run_on_start>
            <feed name="redhat">
                <disabled>no</disabled>
                <update_interval>1h</update_interval>
            </feed>
        </wodle>
        <wodle name="key-request">
            <enabled>yes</enabled>
            <timeout>60</timeout>
            <script>my_script.sh</script>
            <threads>4</threads>
            <queue_size>1024</queue_size>
        </wodle>
        <!-- File integrity monitoring -->
        <syscheck>
            <disabled>yes</disabled>
            <!-- Frequency that syscheck is executed default every 12 hours -->
            <frequency>43200</frequency>
            <scan_on_start>yes</scan_on_start>
            <!-- Generate alert when new file detected -->
            <alert_new_files>yes</alert_new_files>
            <!-- Don't ignore files that change more than 3 times -->
            <auto_ignore>no</auto_ignore>
            <!-- Directories to check  (perform all possible verifications) -->
            <directories check_all="yes">/etc,/usr/bin,/usr/sbin</directories>
            <directories check_all="yes">/bin,/sbin,/boot</directories>
            <!-- Files/directories to ignore -->
            <ignore>/etc/mtab</ignore>
            <ignore>/etc/hosts.deny</ignore>
            <ignore>/etc/mail/statistics</ignore>
            <ignore>/etc/random-seed</ignore>
            <ignore>/etc/random.seed</ignore>
            <ignore>/etc/adjtime</ignore>
            <ignore>/etc/httpd/logs</ignore>
            <ignore>/etc/utmpx</ignore>
            <ignore>/etc/wtmpx</ignore>
            <ignore>/etc/cups/certs</ignore>
            <ignore>/etc/dumpdates</ignore>
            <ignore>/etc/svc/volatile</ignore>
            <ignore>/sys/kernel/security</ignore>
            <ignore>/sys/kernel/debug</ignore>
            <!-- File types to ignore -->
            <ignore type="sregex">.log$|.swp$</ignore>
            <!-- Check the file, but never compute the diff -->
            <nodiff>/etc/ssl/private.key</nodiff>
            <skip_nfs>yes</skip_nfs>
        </syscheck>
        <!-- Active response -->
        <global>
            <white_list>127.0.0.1</white_list>
            <white_list>^localhost.localdomain$</white_list>
            <white_list>10.0.0.2</white_list>
        </global>
        <command>
            <name>disable-account</name>
            <executable>disable-account.sh</executable>
            <expect>user</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>restart-ossec</name>
            <executable>restart-ossec.sh</executable>
            <expect></expect>
        </command>
        <command>
            <name>firewall-drop</name>
            <executable>firewall-drop.sh</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>host-deny</name>
            <executable>host-deny.sh</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>route-null</name>
            <executable>route-null.sh</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>win_route-null</name>
            <executable>route-null.cmd</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <!--
      <active-response>
        active-response options here
      </active-response>
      -->
        <!-- Log analysis -->
        <localfile>
            <log_format>syslog</log_format>
            <location>/var/ossec/logs/active-responses.log</location>
        </localfile>
        <localfile>
            <log_format>syslog</log_format>
            <location>/var/log/messages</location>
        </localfile>
        <localfile>
            <log_format>syslog</log_format>
            <location>/var/log/auth.log</location>
        </localfile>
        <localfile>
            <log_format>syslog</log_format>
            <location>/var/log/syslog</location>
        </localfile>
        <localfile>
            <log_format>command</log_format>
            <command>df -P</command>
            <frequency>360</frequency>
        </localfile>
        <localfile>
            <log_format>full_command</log_format>
            <command>netstat -tan |grep LISTEN |grep -v 127.0.0.1 | sort</command>
            <frequency>360</frequency>
        </localfile>
        <localfile>
            <log_format>full_command</log_format>
            <command>last -n 5</command>
            <frequency>360</frequency>
        </localfile>
        <ruleset>
            <!-- Default ruleset -->
            <decoder_dir>ruleset/decoders</decoder_dir>
            <rule_dir>ruleset/rules</rule_dir>
            <rule_exclude>0215-policy_rules.xml</rule_exclude>
            <list>etc/lists/audit-keys</list>
            <!-- User-defined ruleset -->
            <decoder_dir>etc/decoders</decoder_dir>
            <rule_dir>etc/rules</rule_dir>
        </ruleset>
        <!-- Configuration for ossec-authd
          To enable this service, run:
          ossec-control enable auth
        -->
        <auth>
            <disabled>no</disabled>
            <port>1515</port>
            <use_source_ip>no</use_source_ip>
            <force_insert>yes</force_insert>
            <force_time>0</force_time>
            <purge>yes</purge>
            <use_password>yes</use_password>
            <!-- <ssl_agent_ca></ssl_agent_ca> -->
            <ssl_verify_host>no</ssl_verify_host>
            <ssl_manager_cert>/var/ossec/etc/sslmanager.cert</ssl_manager_cert>
            <ssl_manager_key>/var/ossec/etc/sslmanager.key</ssl_manager_key>
            <ssl_auto_negotiate>no</ssl_auto_negotiate>
        </auth>
    </ossec_config>
  worker_ossec.conf: |
    <ossec_config>
        <global>
            <jsonout_output>no</jsonout_output>
            <alerts_log>yes</alerts_log>
            <logall>yes</logall>
            <logall_json>no</logall_json>
            <email_notification>no</email_notification>
            <smtp_server>smtp.example.wazuh.com</smtp_server>
            <email_from>ossecm@example.wazuh.com</email_from>
            <email_to>recipient@example.wazuh.com</email_to>
            <email_maxperhour>12</email_maxperhour>
            <queue_size>131072</queue_size>
        </global>
        <alerts>
            <log_alert_level>3</log_alert_level>
            <email_alert_level>12</email_alert_level>
        </alerts>
        <!-- Choose between "plain", "json", or "plain,json" for the format of internal logs -->
        <logging>
            <log_format>json</log_format>
        </logging>
        <remote>
            <connection>secure</connection>
            <port>1514</port>
            <protocol>tcp</protocol>
        </remote>
        <remote>
            <connection>syslog</connection>
            <port>514</port>
            <protocol>tcp</protocol>
            <allowed-ips>10.0.0.0/8</allowed-ips>
        </remote>
        <!-- Policy monitoring -->
        <rootcheck>
            <disabled>yes</disabled>
            <check_unixaudit>yes</check_unixaudit>
            <check_files>yes</check_files>
            <check_trojans>yes</check_trojans>
            <check_dev>yes</check_dev>
            <check_sys>yes</check_sys>
            <check_pids>yes</check_pids>
            <check_ports>yes</check_ports>
            <check_if>yes</check_if>
            <!-- Frequency that rootcheck is executed - every 12 hours -->
            <frequency>43200</frequency>
            <rootkit_files>/var/ossec/etc/rootcheck/rootkit_files.txt</rootkit_files>
            <rootkit_trojans>/var/ossec/etc/rootcheck/rootkit_trojans.txt</rootkit_trojans>
            <system_audit>/var/ossec/etc/rootcheck/system_audit_rcl.txt</system_audit>
            <system_audit>/var/ossec/etc/rootcheck/system_audit_ssh.txt</system_audit>
            <skip_nfs>yes</skip_nfs>
        </rootcheck>
        <wodle name="open-scap">
            <disabled>yes</disabled>
            <timeout>1800</timeout>
            <interval>1d</interval>
            <scan-on-start>yes</scan-on-start>
        </wodle>
        <wodle name="cis-cat">
            <disabled>yes</disabled>
            <timeout>1800</timeout>
            <interval>1d</interval>
            <scan-on-start>yes</scan-on-start>
            <java_path>wodles/java</java_path>
            <ciscat_path>wodles/ciscat</ciscat_path>
        </wodle>
        <!-- Osquery integration -->
        <wodle name="osquery">
            <disabled>yes</disabled>
            <run_daemon>yes</run_daemon>
            <log_path>/var/log/osquery/osqueryd.results.log</log_path>
            <config_path>/etc/osquery/osquery.conf</config_path>
            <add_labels>yes</add_labels>
        </wodle>
        <!-- System inventory -->
        <wodle name="syscollector">
            <disabled>no</disabled>
            <interval>1h</interval>
            <scan_on_start>yes</scan_on_start>
            <hardware>yes</hardware>
            <os>yes</os>
            <network>yes</network>
            <packages>yes</packages>
            <ports all="no">yes</ports>
            <processes>yes</processes>
        </wodle>
        <wodle name="vulnerability-detector">
            <disabled>no</disabled>
            <interval>5m</interval>
            <run_on_start>yes</run_on_start>
            <feed name="redhat">
                <disabled>no</disabled>
                <update_interval>1h</update_interval>
            </feed>
        </wodle>
        <!-- File integrity monitoring -->
        <syscheck>
            <disabled>yes</disabled>
            <!-- Frequency that syscheck is executed default every 12 hours -->
            <frequency>43200</frequency>
            <scan_on_start>yes</scan_on_start>
            <!-- Generate alert when new file detected -->
            <alert_new_files>yes</alert_new_files>
            <!-- Don't ignore files that change more than 'frequency' times -->
            <auto_ignore frequency="10" timeframe="3600">no</auto_ignore>
            <!-- Directories to check  (perform all possible verifications) -->
            <directories check_all="yes">/etc,/usr/bin,/usr/sbin</directories>
            <directories check_all="yes">/bin,/sbin,/boot</directories>
            <!-- Files/directories to ignore -->
            <ignore>/etc/mtab</ignore>
            <ignore>/etc/hosts.deny</ignore>
            <ignore>/etc/mail/statistics</ignore>
            <ignore>/etc/random-seed</ignore>
            <ignore>/etc/random.seed</ignore>
            <ignore>/etc/adjtime</ignore>
            <ignore>/etc/httpd/logs</ignore>
            <ignore>/etc/utmpx</ignore>
            <ignore>/etc/wtmpx</ignore>
            <ignore>/etc/cups/certs</ignore>
            <ignore>/etc/dumpdates</ignore>
            <ignore>/etc/svc/volatile</ignore>
            <ignore>/sys/kernel/security</ignore>
            <ignore>/sys/kernel/debug</ignore>
            <!-- Check the file, but never compute the diff -->
            <nodiff>/etc/ssl/private.key</nodiff>
            <skip_nfs>yes</skip_nfs>
            <!-- Remove not monitored files -->
            <remove_old_diff>yes</remove_old_diff>
            <!-- Allow the system to restart Auditd after installing the plugin -->
            <restart_audit>yes</restart_audit>
        </syscheck>
        <!-- Active response -->
        <global>
            <white_list>127.0.0.1</white_list>
            <white_list>^localhost.localdomain$</white_list>
            <white_list>10.66.0.2</white_list>
        </global>
        <command>
            <name>disable-account</name>
            <executable>disable-account.sh</executable>
            <expect>user</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>restart-ossec</name>
            <executable>restart-ossec.sh</executable>
            <expect></expect>
        </command>
        <command>
            <name>firewall-drop</name>
            <executable>firewall-drop.sh</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>host-deny</name>
            <executable>host-deny.sh</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>route-null</name>
            <executable>route-null.sh</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>win_route-null</name>
            <executable>route-null.cmd</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>win_route-null-2012</name>
            <executable>route-null-2012.cmd</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>netsh</name>
            <executable>netsh.cmd</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <command>
            <name>netsh-win-2016</name>
            <executable>netsh-win-2016.cmd</executable>
            <expect>srcip</expect>
            <timeout_allowed>yes</timeout_allowed>
        </command>
        <!--
      <active-response>
        active-response options here
      </active-response>
      -->
        <!-- Log analysis -->
        <localfile>
            <log_format>command</log_format>
            <command>df -P</command>
            <frequency>360</frequency>
        </localfile>
        <localfile>
            <log_format>full_command</log_format>
            <command>netstat -tulpn | sed 's/\([[:alnum:]]\+\)\ \+[[:digit:]]\+\ \+[[:digit:]]\+\ \+\(.*\):\([[:digit:]]*\)\ \+\([0-9\.\:\*]\+\).\+\ \([[:digit:]]*\/[[:alnum:]\-]*\).*/\1 \2 == \3 == \4 \5/' | sort -k 4 -g | sed 's/ == \(.*\) ==/:\1/' | sed 1,2d</command>
            <alias>netstat listening ports</alias>
            <frequency>360</frequency>
        </localfile>
        <localfile>
            <log_format>full_command</log_format>
            <command>last -n 20</command>
            <frequency>360</frequency>
        </localfile>
        <ruleset>
            <!-- Default ruleset -->
            <decoder_dir>ruleset/decoders</decoder_dir>
            <rule_dir>ruleset/rules</rule_dir>
            <rule_exclude>0215-policy_rules.xml</rule_exclude>
            <list>etc/lists/audit-keys</list>
            <list>etc/lists/amazon/aws-sources</list>
            <list>etc/lists/amazon/aws-eventnames</list>
            <!-- User-defined ruleset -->
            <decoder_dir>etc/decoders</decoder_dir>
            <rule_dir>etc/rules</rule_dir>
        </ruleset>
        <!-- Configuration for ossec-authd
        To enable this service, run:
        ossec-control enable auth
      -->
        <auth>
            <disabled>no</disabled>
            <port>1515</port>
            <use_source_ip>no</use_source_ip>
            <force_insert>no</force_insert>
            <force_time>0</force_time>
            <purge>no</purge>
            <use_password>yes</use_password>
            <limit_maxagents>yes</limit_maxagents>
            <ciphers>HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH</ciphers>
            <!-- <ssl_agent_ca></ssl_agent_ca> -->
            <ssl_verify_host>no</ssl_verify_host>
            <ssl_manager_cert>/var/ossec/etc/sslmanager.cert</ssl_manager_cert>
            <ssl_manager_key>/var/ossec/etc/sslmanager.key</ssl_manager_key>
            <ssl_auto_negotiate>no</ssl_auto_negotiate>
        </auth>
        <cluster>
            <name>wazuh</name>
            <node_name>wazuh-worker-0</node_name>
            <node_type>worker</node_type>
            <!-- TODO: Don't hardcode the key! (and change it) -->
            <key>a7fee6638ada1be2033e65561eaf31f0</key>
            <port>1516</port>
            <bind_addr>0.0.0.0</bind_addr>
            <nodes>
                <node>wazuh-master-0.wazuh-int.default.svc.cluster.local</node>
            </nodes>
            <hidden>no</hidden>
            <disabled>no</disabled>
        </cluster>
    </ossec_config>
    <ossec_config>
        <localfile>
            <log_format>syslog</log_format>
            <location>/var/ossec/logs/active-responses.log</location>
        </localfile>
        <localfile>
            <log_format>syslog</log_format>
            <location>/var/log/syslog</location>
        </localfile>
        <localfile>
            <log_format>syslog</log_format>
            <location>/var/log/dpkg.log</location>
        </localfile>
    </ossec_config>
  filebeat.yml: |
    # Wazuh Docker Copyright (C) 2019 Wazuh Inc. (License GPLv2)
    filebeat.inputs:
      - type: log
        paths:
          - '/var/ossec/logs/alerts/alerts.json'
    setup.template.json.enabled: true
    setup.template.json.path: "/etc/filebeat/wazuh-template.json"
    setup.template.json.name: "wazuh"
    setup.template.overwrite: true
    processors:
      - decode_json_fields:
          fields: ['message']
          process_array: true
          max_depth: 200
          target: ''
          overwrite_keys: true
      - drop_fields:
          fields: ['message', 'ecs', 'beat', 'input_type', 'tags', 'count', '@version', 'log', 'offset', 'type', 'host']
      - rename:
          fields:
            - from: "data.aws.sourceIPAddress"
              to: "@src_ip"
          ignore_missing: true
          fail_on_error: false
          when:
            regexp:
              data.aws.sourceIPAddress: \b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b
      - rename:
          fields:
            - from: "data.srcip"
              to: "@src_ip"
          ignore_missing: true
          fail_on_error: false
          when:
            regexp:
              data.srcip: \b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b
      - rename:
          fields:
            - from: "data.win.eventdata.ipAddress"
              to: "@src_ip"
          ignore_missing: true
          fail_on_error: false
          when:
            regexp:
              data.win.eventdata.ipAddress: \b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b
    output:
      logstash:
        hosts: ["fluentd:5044"]
